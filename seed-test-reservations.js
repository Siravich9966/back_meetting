// ===================================================================
// ‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ú‡πà‡∏≤‡∏ô Prisma
// ===================================================================
import prisma from './lib/prisma.js'

async function createTestReservations() {
  try {
    console.log('üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á')
    console.log('=' .repeat(60))
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö user_id ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà
    const users = await prisma.users.findMany({
      select: { user_id: true, first_name: true, last_name: true },
      take: 5
    })
    
    console.log('üë• ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö:')
    users.forEach(user => {
      console.log(`   - ID: ${user.user_id}, ‡∏ä‡∏∑‡πà‡∏≠: ${user.first_name} ${user.last_name}`)
    })
    
    if (users.length === 0) {
      console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö')
      return
    }
    
    const testUserId = users[0].user_id
    console.log(`\n‚úÖ ‡∏à‡∏∞‡πÉ‡∏ä‡πâ user_id: ${testUserId} (${users[0].first_name} ${users[0].last_name})`)
    
    // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏Å‡πà‡∏≤ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
    console.log('\nüßπ ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏Å‡πà‡∏≤...')
    const deleted = await prisma.reservation.deleteMany({
      where: {
        details_r: {
          contains: '(‡∏ó‡∏î‡∏™‡∏≠‡∏ö)'
        }
      }
    })
    console.log(`   ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤: ${deleted.count} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`)
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÉ‡∏´‡∏°‡πà
    console.log('\nüìù ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÉ‡∏´‡∏°‡πà...')
    
    const testReservations = [
      {
        user_id: testUserId,
        room_id: 7,
        start_at: new Date('2025-08-05'),
        end_at: new Date('2025-08-05'),
        start_time: new Date('2025-08-05T09:00:00'),
        end_time: new Date('2025-08-05T12:00:00'),
        details_r: '‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°‡∏Ñ‡∏ì‡∏∞‡∏Å‡∏£‡∏£‡∏°‡∏Å‡∏≤‡∏£ IT (‡∏ó‡∏î‡∏™‡∏≠‡∏ö)',
        status_r: 'approved'
      },
      {
        user_id: testUserId,
        room_id: 7,
        start_at: new Date('2025-08-06'),
        end_at: new Date('2025-08-06'),
        start_time: new Date('2025-08-06T06:00:00'),
        end_time: new Date('2025-08-06T12:00:00'),
        details_r: '‡∏≠‡∏ö‡∏£‡∏°‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô ‡πÄ‡∏ä‡πâ‡∏≤ (‡∏ó‡∏î‡∏™‡∏≠‡∏ö)',
        status_r: 'approved'
      },
      {
        user_id: testUserId,
        room_id: 7,
        start_at: new Date('2025-08-06'),
        end_at: new Date('2025-08-06'),
        start_time: new Date('2025-08-06T13:00:00'),
        end_time: new Date('2025-08-06T18:00:00'),
        details_r: '‡∏≠‡∏ö‡∏£‡∏°‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô ‡∏ö‡πà‡∏≤‡∏¢ (‡∏ó‡∏î‡∏™‡∏≠‡∏ö)',
        status_r: 'approved'
      },
      {
        user_id: testUserId,
        room_id: 7,
        start_at: new Date('2025-08-07'),
        end_at: new Date('2025-08-07'),
        start_time: new Date('2025-08-07T15:00:00'),
        end_time: new Date('2025-08-07T18:00:00'),
        details_r: '‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°‡πÅ‡∏ú‡∏ô‡∏Å‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå (‡∏ó‡∏î‡∏™‡∏≠‡∏ö)',
        status_r: 'approved'
      }
    ]
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
    for (let i = 0; i < testReservations.length; i++) {
      const reservation = testReservations[i]
      const created = await prisma.reservation.create({
        data: reservation
      })
      
      const date = reservation.start_at.toLocaleDateString('th-TH')
      const startTime = reservation.start_time.toLocaleTimeString('th-TH', {hour: '2-digit', minute: '2-digit'})
      const endTime = reservation.end_time.toLocaleTimeString('th-TH', {hour: '2-digit', minute: '2-digit'})
      
      console.log(`   ‚úÖ ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ó‡∏µ‡πà ${i + 1}: ID ${created.reservation_id} - ${date} ${startTime}-${endTime}`)
    }
    
    console.log('\nüé® ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏µ‡πà‡∏Ñ‡∏≤‡∏î‡∏´‡∏ß‡∏±‡∏á‡πÉ‡∏ô‡∏õ‡∏è‡∏¥‡∏ó‡∏¥‡∏ô:')
    console.log('   üìÖ 5/8/2568 (‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ): üü° ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á - ‡∏ß‡πà‡∏≤‡∏á‡∏ö‡∏≤‡∏á‡∏ä‡πà‡∏ß‡∏á (09:00-12:00 ‡∏ñ‡∏π‡∏Å‡∏à‡∏≠‡∏á)')
    console.log('   üìÖ 6/8/2568 (‡∏û‡∏£‡∏∏‡πà‡∏á‡∏ô‡∏µ‡πâ): üî¥ ‡πÅ‡∏î‡∏á - ‡πÄ‡∏ï‡πá‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏ß‡∏±‡∏ô (06:00-12:00, 13:00-18:00 ‡∏ñ‡∏π‡∏Å‡∏à‡∏≠‡∏á)')
    console.log('   üìÖ 7/8/2568 (‡∏°‡∏∞‡∏£‡∏∑‡∏ô‡∏ô‡∏µ‡πâ): üü° ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á - ‡∏ß‡πà‡∏≤‡∏á‡∏ö‡∏≤‡∏á‡∏ä‡πà‡∏ß‡∏á (15:00-18:00 ‡∏ñ‡∏π‡∏Å‡∏à‡∏≠‡∏á)')
    
    console.log('\n‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô')
    console.log('üí° ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏î‡∏π‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå: bun test-calendar.js')
    
  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error)
  } finally {
    await prisma.$disconnect()
  }
}

// ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô
createTestReservations()
