// ===================================================================
// Test Fixed Multi-day Booking Logic - ‡∏ó‡∏î‡∏™‡∏≠‡∏ö logic ‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß
// ===================================================================

import { Elysia } from 'elysia'

const app = new Elysia()
  .get('/', () => 'Fixed Multi-day booking logic test')
  .listen(3000)

console.log('üß™ Testing Fixed Multi-day Booking Logic...\n')

// Base URL for API calls
const BASE_URL = 'http://localhost:3001'

// Test data - ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏´‡πâ
const testCases = [
  {
    name: 'üéØ Test 1: ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ï‡∏≤‡∏°‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏´‡πâ',
    description: '‡∏à‡∏≠‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà 5 ‡∏ä‡πà‡∏ß‡∏á‡∏ö‡πà‡∏≤‡∏¢ (13:00-17:00) ‡∏Ç‡∏ì‡∏∞‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà 1-5 ‡πÅ‡∏ï‡πà‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà 5 ‡∏à‡∏ö‡πÄ‡∏ß‡∏•‡∏≤ 12:00',
    existing: '‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÄ‡∏Å‡πà‡∏≤: 1/1/25 ‡∏ñ‡∏∂‡∏á 5/1/25, ‡πÄ‡∏ß‡∏•‡∏≤ 07:00-17:00 (‡∏™‡∏°‡∏°‡∏ï‡∏¥‡∏ß‡∏±‡∏ô‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡∏à‡∏ö 12:00)',
    booking: {
      room_id: 1,
      start_at: '2025-01-05',
      end_at: '2025-01-05',
      start_time: '2025-01-05T13:00:00.000Z',
      end_time: '2025-01-05T17:00:00.000Z',
      details_r: '‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°‡∏ä‡πà‡∏ß‡∏á‡∏ö‡πà‡∏≤‡∏¢ - ‡∏Ñ‡∏ß‡∏£‡∏à‡∏≠‡∏á‡πÑ‡∏î‡πâ'
    },
    expectedResult: '‡∏Ñ‡∏ß‡∏£‡∏à‡∏≠‡∏á‡πÑ‡∏î‡πâ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÑ‡∏°‡πà‡∏ó‡∏±‡∏ö‡∏Å‡∏±‡∏ö‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ä‡πâ‡∏≤'
  },
  {
    name: 'üî¥ Test 2: ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ó‡∏±‡∏ö‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÄ‡∏Å‡πà‡∏≤‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢',
    description: '‡∏à‡∏≠‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà 5 ‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ä‡πâ‡∏≤ (10:00-14:00) ‡∏ã‡∏∂‡πà‡∏á‡∏ó‡∏±‡∏ö‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÄ‡∏Å‡πà‡∏≤',
    booking: {
      room_id: 1,
      start_at: '2025-01-05',
      end_at: '2025-01-05',
      start_time: '2025-01-05T10:00:00.000Z',
      end_time: '2025-01-05T14:00:00.000Z',
      details_r: '‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ä‡πâ‡∏≤ - ‡∏Ñ‡∏ß‡∏£‡∏ñ‡∏π‡∏Å‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò'
    },
    expectedResult: '‡∏Ñ‡∏ß‡∏£‡∏ñ‡∏π‡∏Å‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏ó‡∏±‡∏ö‡∏Å‡∏±‡∏ô'
  },
  {
    name: 'üü° Test 3: ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏Å‡∏•‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏´‡∏•‡∏≤‡∏¢‡∏ß‡∏±‡∏ô',
    description: '‡∏à‡∏≠‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà 3 ‡∏ã‡∏∂‡πà‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏Å‡∏•‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÄ‡∏Å‡πà‡∏≤',
    booking: {
      room_id: 1,
      start_at: '2025-01-03',
      end_at: '2025-01-03',
      start_time: '2025-01-03T10:00:00.000Z',
      end_time: '2025-01-03T14:00:00.000Z',
      details_r: '‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏Å‡∏•‡∏≤‡∏á - ‡∏Ñ‡∏ß‡∏£‡∏ñ‡∏π‡∏Å‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò'
    },
    expectedResult: '‡∏Ñ‡∏ß‡∏£‡∏ñ‡∏π‡∏Å‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏ó‡∏±‡∏ö‡∏Å‡∏±‡∏ô'
  },
  {
    name: 'üü¢ Test 4: ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ó‡∏±‡∏ö‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÄ‡∏Å‡πà‡∏≤',
    description: '‡∏à‡∏≠‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà 10 ‡∏ã‡∏∂‡πà‡∏á‡πÑ‡∏°‡πà‡∏ó‡∏±‡∏ö‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÄ‡∏Å‡πà‡∏≤',
    booking: {
      room_id: 1,
      start_at: '2025-01-10',
      end_at: '2025-01-10',
      start_time: '2025-01-10T09:00:00.000Z',
      end_time: '2025-01-10T17:00:00.000Z',
      details_r: '‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ó‡∏±‡∏ö‡∏Å‡∏±‡∏ô - ‡∏Ñ‡∏ß‡∏£‡∏à‡∏≠‡∏á‡πÑ‡∏î‡πâ'
    },
    expectedResult: '‡∏Ñ‡∏ß‡∏£‡∏à‡∏≠‡∏á‡πÑ‡∏î‡πâ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÑ‡∏°‡πà‡∏ó‡∏±‡∏ö‡∏Å‡∏±‡∏ô'
  },
  {
    name: 'üîµ Test 5: ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏Ç‡πâ‡∏≤‡∏°‡πÄ‡∏î‡∏∑‡∏≠‡∏ô',
    description: '‡∏à‡∏≠‡∏á‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏Å‡∏∏‡∏°‡∏†‡∏≤‡∏û‡∏±‡∏ô‡∏ò‡πå ‡∏ã‡∏∂‡πà‡∏á‡πÑ‡∏°‡πà‡∏ó‡∏±‡∏ö‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÉ‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏°‡∏Å‡∏£‡∏≤‡∏Ñ‡∏°',
    booking: {
      room_id: 1,
      start_at: '2025-02-15',
      end_at: '2025-02-15',
      start_time: '2025-02-15T10:00:00.000Z',
      end_time: '2025-02-15T16:00:00.000Z',
      details_r: '‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°‡∏Ç‡πâ‡∏≤‡∏°‡πÄ‡∏î‡∏∑‡∏≠‡∏ô - ‡∏Ñ‡∏ß‡∏£‡∏à‡∏≠‡∏á‡πÑ‡∏î‡πâ'
    },
    expectedResult: '‡∏Ñ‡∏ß‡∏£‡∏à‡∏≠‡∏á‡πÑ‡∏î‡πâ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏Ç‡πâ‡∏≤‡∏°‡πÄ‡∏î‡∏∑‡∏≠‡∏ô'
  }
]

async function makeReservation(booking) {
  try {
    // ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ valid JWT token ‡∏à‡∏£‡∏¥‡∏á
    // ‡πÉ‡∏ô test ‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
    
    console.log('üì§ API Call:')
    console.log(`POST ${BASE_URL}/protected/reservations`)
    console.log('üì¶ Request Body:')
    console.log(JSON.stringify(booking, null, 2))
    
    // ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API (‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ server ‡∏à‡∏£‡∏¥‡∏á)
    console.log('‚ö†Ô∏è  ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: ‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏±‡∏ô server ‡∏î‡πâ‡∏ß‡∏¢ bun index.js ‡πÅ‡∏•‡∏∞‡∏°‡∏µ JWT token ‡∏à‡∏£‡∏¥‡∏á')
    
    return {
      status: 'SIMULATED',
      success: true,
      message: 'This is a simulated test - please run actual API calls with real server'
    }
    
  } catch (error) {
    return {
      status: 500,
      success: false,
      message: error.message
    }
  }
}

async function runTests() {
  console.log('üìù ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö Logic ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß')
  console.log('=' .repeat(60))
  
  // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏™‡∏°‡∏°‡∏ï‡∏¥‡πÑ‡∏ß‡πâ
  console.log('üìã ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏™‡∏°‡∏°‡∏ï‡∏¥:')
  console.log('  ‡∏´‡πâ‡∏≠‡∏á: 1')
  console.log('  ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: 1 ‡∏°.‡∏Ñ. 2025 ‡∏ñ‡∏∂‡∏á 5 ‡∏°.‡∏Ñ. 2025')
  console.log('  ‡πÄ‡∏ß‡∏•‡∏≤: 07:00-17:00 (‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà 1-4)')
  console.log('  ‡πÄ‡∏ß‡∏•‡∏≤‡∏ß‡∏±‡∏ô‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢: 07:00-12:00 (‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà 5)')
  console.log('  ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: approved')
  console.log('')
  
  for (let i = 0; i < testCases.length; i++) {
    const testCase = testCases[i]
    console.log(`${testCase.name}`)
    console.log(`üìù ${testCase.description}`)
    console.log('üìÖ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á:')
    console.log(`  ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: ${testCase.booking.start_at} ‡∏ñ‡∏∂‡∏á ${testCase.booking.end_at}`)
    console.log(`  ‡πÄ‡∏ß‡∏•‡∏≤: ${new Date(testCase.booking.start_time).toTimeString().slice(0,5)} - ${new Date(testCase.booking.end_time).toTimeString().slice(0,5)}`)
    console.log(`  ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î: ${testCase.booking.details_r}`)
    console.log(`üéØ ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏µ‡πà‡∏Ñ‡∏≤‡∏î‡∏´‡∏ß‡∏±‡∏á: ${testCase.expectedResult}`)
    
    console.log('\n‚è≥ ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠...')
    const result = await makeReservation(testCase.booking)
    
    console.log('üìä ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏à‡∏≥‡∏•‡∏≠‡∏á:')
    console.log(`  Status: ${result.status}`)
    console.log(`  Message: ${result.message}`)
    
    console.log('\n' + '-'.repeat(60) + '\n')
    
    // ‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤
    await new Promise(resolve => setTimeout(resolve, 500))
  }
  
  console.log('üîß ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏à‡∏£‡∏¥‡∏á:')
  console.log('1. ‡∏£‡∏±‡∏ô server: bun index.js')
  console.log('2. Login ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö JWT token')
  console.log('3. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÄ‡∏Å‡πà‡∏≤‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•')
  console.log('4. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö API calls ‡∏à‡∏£‡∏¥‡∏á‡∏î‡πâ‡∏ß‡∏¢ token')
  console.log('')
  console.log('üìã ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:')
  console.log('‚úÖ Logic ‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏ä‡πá‡∏Ñ‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏±‡∏ö‡∏ã‡πâ‡∏≠‡∏ô‡πÅ‡∏¢‡∏Å‡∏Å‡∏±‡∏ô')
  console.log('‚úÖ ‡πÑ‡∏°‡πà‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤ multi-day = conflict ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥')
  console.log('‚úÖ ‡πÄ‡∏ä‡πá‡∏Ñ‡πÄ‡∏ß‡∏•‡∏≤‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ß‡∏±‡∏ô')
  console.log('‚è≥ ‡∏¢‡∏±‡∏á‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏° end_time_final field ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡∏ß‡∏±‡∏ô‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢')
}

// ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö
runTests().then(() => {
  console.log('\n‚ú® Test simulation completed!')
  console.log('üöÄ ‡∏£‡∏∞‡∏ö‡∏ö‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏à‡∏£‡∏¥‡∏á!')
  process.exit(0)
}).catch(error => {
  console.error('‚ùå Test failed:', error)
  process.exit(1)
})
