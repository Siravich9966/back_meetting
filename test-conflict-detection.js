// ===================================================================
// ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Conflict Detection Logic ‡πÅ‡∏ö‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏à‡∏≤‡∏∞‡∏à‡∏á
// ===================================================================

const API_BASE = 'http://localhost:8000/api'

async function testConflictDetection() {
  console.log('üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Conflict Detection Logic')
  console.log('='.repeat(60))

  // 1. Login ‡πÄ‡∏õ‡πá‡∏ô user
  console.log('\nüìù Step 1: Login ‡πÄ‡∏õ‡πá‡∏ô user')
  const loginResponse = await fetch(`${API_BASE}/auth/login`, {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({
      email: 'student.test@example.com',
      password: 'password123'
    })
  })
  
  const loginData = await loginResponse.json()
  
  if (!loginData.success) {
    console.log('‚ùå Login ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', loginData.message)
    return
  }
  
  const token = loginData.token
  console.log('‚úÖ Login ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à')
  
  // 2. ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°
  console.log('\nüìù Step 2: ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°')
  const roomsResponse = await fetch(`${API_BASE}/rooms`)
  const roomsData = await roomsResponse.json()
  
  if (!roomsData.success || !roomsData.rooms.length) {
    console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°')
    return
  }
  
  const testRoom = roomsData.rooms[0]
  console.log(`‚úÖ ‡∏û‡∏ö‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö: ${testRoom.room_name} (ID: ${testRoom.room_id})`)
  
  // 3. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÉ‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ï‡πà‡∏≤‡∏á‡∏Å‡∏±‡∏ô
  console.log('\nüìù Step 3: ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÉ‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ï‡πà‡∏≤‡∏á‡∏Å‡∏±‡∏ô')
  
  // ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ó‡∏µ‡πà 1: 1-3 ‡∏°‡∏Å‡∏£‡∏≤‡∏Ñ‡∏° 2025
  console.log('\nüéØ Test Case 1: ‡∏à‡∏≠‡∏á 1-3 ‡∏°‡∏Å‡∏£‡∏≤‡∏Ñ‡∏° 2025')
  const booking1 = await fetch(`${API_BASE}/protected/reservations`, {
    method: 'POST',
    headers: { 
      'Content-Type': 'application/json',
      'Authorization': `Bearer ${token}`
    },
    body: JSON.stringify({
      room_id: testRoom.room_id,
      start_at: '2025-01-01',
      end_at: '2025-01-03', 
      start_time: '2025-01-01T09:00:00.000Z',
      end_time: '2025-01-01T17:00:00.000Z',
      details_r: '‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ä‡πà‡∏ß‡∏á 1-3 ‡∏°‡∏Å‡∏£‡∏≤‡∏Ñ‡∏° 2025'
    })
  })
  
  const booking1Data = await booking1.json()
  console.log(`   ${booking1Data.success ? '‚úÖ' : '‚ùå'} Status: ${booking1.status}`)
  console.log(`   üìÑ Message: ${booking1Data.message}`)
  
  if (booking1Data.success) {
    console.log(`   üìù Reservation ID: ${booking1Data.reservation?.reservation_id}`)
  }
  
  // ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ó‡∏µ‡πà 2: 1-3 ‡∏Å‡∏∏‡∏°‡∏†‡∏≤‡∏û‡∏±‡∏ô‡∏ò‡πå 2025 (‡∏Ñ‡∏ß‡∏£‡∏à‡∏≠‡∏á‡πÑ‡∏î‡πâ)
  console.log('\nüéØ Test Case 2: ‡∏à‡∏≠‡∏á 1-3 ‡∏Å‡∏∏‡∏°‡∏†‡∏≤‡∏û‡∏±‡∏ô‡∏ò‡πå 2025 (‡∏Ñ‡∏ß‡∏£‡∏à‡∏≠‡∏á‡πÑ‡∏î‡πâ)')
  const booking2 = await fetch(`${API_BASE}/protected/reservations`, {
    method: 'POST',
    headers: { 
      'Content-Type': 'application/json',
      'Authorization': `Bearer ${token}`
    },
    body: JSON.stringify({
      room_id: testRoom.room_id,
      start_at: '2025-02-01',
      end_at: '2025-02-03',
      start_time: '2025-02-01T09:00:00.000Z', 
      end_time: '2025-02-01T17:00:00.000Z',
      details_r: '‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ä‡πà‡∏ß‡∏á 1-3 ‡∏Å‡∏∏‡∏°‡∏†‡∏≤‡∏û‡∏±‡∏ô‡∏ò‡πå 2025'
    })
  })
  
  const booking2Data = await booking2.json()
  console.log(`   ${booking2Data.success ? '‚úÖ' : '‚ùå'} Status: ${booking2.status}`)
  console.log(`   üìÑ Message: ${booking2Data.message}`)
  
  if (booking2Data.success) {
    console.log(`   üìù Reservation ID: ${booking2Data.reservation?.reservation_id}`)
    console.log('   üéâ ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÉ‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ï‡πà‡∏≤‡∏á‡∏Å‡∏±‡∏ô‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á!')
  } else {
    console.log('   ‚ùå BUG: ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÉ‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ï‡πà‡∏≤‡∏á‡∏Å‡∏±‡∏ô‡πÑ‡∏°‡πà‡∏Ñ‡∏ß‡∏£‡∏Ç‡∏±‡∏î‡πÅ‡∏¢‡πâ‡∏á‡∏Å‡∏±‡∏ô!')
    if (booking2Data.conflicts) {
      console.log('   üîç Conflicts found:')
      booking2Data.conflicts.forEach(conflict => {
        console.log(`      - ID ${conflict.reservation_id}: ${conflict.start_at} to ${conflict.end_at}`)
      })
    }
  }
  
  // ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ó‡∏µ‡πà 3: 2-4 ‡∏°‡∏Å‡∏£‡∏≤‡∏Ñ‡∏° 2025 (‡∏Ñ‡∏ß‡∏£‡∏Ç‡∏±‡∏î‡πÅ‡∏¢‡πâ‡∏á)
  console.log('\nüéØ Test Case 3: ‡∏à‡∏≠‡∏á 2-4 ‡∏°‡∏Å‡∏£‡∏≤‡∏Ñ‡∏° 2025 (‡∏Ñ‡∏ß‡∏£‡∏Ç‡∏±‡∏î‡πÅ‡∏¢‡πâ‡∏á)')
  const booking3 = await fetch(`${API_BASE}/protected/reservations`, {
    method: 'POST',
    headers: { 
      'Content-Type': 'application/json',
      'Authorization': `Bearer ${token}`
    },
    body: JSON.stringify({
      room_id: testRoom.room_id,
      start_at: '2025-01-02',
      end_at: '2025-01-04',
      start_time: '2025-01-02T10:00:00.000Z',
      end_time: '2025-01-02T16:00:00.000Z', 
      details_r: '‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£‡∏Ç‡∏±‡∏î‡πÅ‡∏¢‡πâ‡∏á 2-4 ‡∏°‡∏Å‡∏£‡∏≤‡∏Ñ‡∏° 2025'
    })
  })
  
  const booking3Data = await booking3.json()
  console.log(`   ${!booking3Data.success ? '‚úÖ' : '‚ùå'} Status: ${booking3.status}`)
  console.log(`   üìÑ Message: ${booking3Data.message}`)
  
  if (!booking3Data.success && booking3.status === 409) {
    console.log('   üéâ Conflict detection ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á!')
  } else {
    console.log('   ‚ùå BUG: ‡∏Ñ‡∏ß‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏û‡∏ö conflict!')
  }
  
  console.log('\n' + '='.repeat(60))
  console.log('üéØ ‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö Conflict Detection')
  console.log('='.repeat(60))
  
  const test1Pass = booking1Data.success
  const test2Pass = booking2Data.success // ‡∏Ñ‡∏ß‡∏£‡∏à‡∏≠‡∏á‡πÑ‡∏î‡πâ
  const test3Pass = !booking3Data.success && booking3.status === 409 // ‡∏Ñ‡∏ß‡∏£‡∏Ç‡∏±‡∏î‡πÅ‡∏¢‡πâ‡∏á
  
  console.log(`üìä Test 1 (‡∏à‡∏≠‡∏á ‡∏°‡∏Å‡∏£‡∏≤‡∏Ñ‡∏°): ${test1Pass ? 'PASS' : 'FAIL'}`)
  console.log(`üìä Test 2 (‡∏à‡∏≠‡∏á ‡∏Å‡∏∏‡∏°‡∏†‡∏≤): ${test2Pass ? 'PASS' : 'FAIL'} - ‡∏Ñ‡∏ô‡∏ï‡πà‡∏≤‡∏á‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏Ñ‡∏ß‡∏£‡∏à‡∏≠‡∏á‡πÑ‡∏î‡πâ`)
  console.log(`üìä Test 3 (‡∏ã‡πâ‡∏≠‡∏ô‡∏ó‡∏±‡∏ö): ${test3Pass ? 'PASS' : 'FAIL'} - ‡∏Ñ‡∏ß‡∏£‡∏Ç‡∏±‡∏î‡πÅ‡∏¢‡πâ‡∏á`)
  
  const overallPass = test1Pass && test2Pass && test3Pass
  console.log(`\nüèÜ Overall: ${overallPass ? 'PASS' : 'FAIL'}`)
  
  if (!test2Pass) {
    console.log('\nüîß ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:')
    console.log('   - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö conflict detection logic')
    console.log('   - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö date comparison')
    console.log('   - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö timezone handling')
  }
}

// ‡∏£‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö
testConflictDetection().catch(console.error)
