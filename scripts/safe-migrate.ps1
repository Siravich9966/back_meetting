# ==========================================
# Database Backup Script ‡∏Å‡πà‡∏≠‡∏ô Migration (Windows PowerShell)
# ==========================================
# ‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ: .\safe-migrate.ps1

$BackupDir = ".\db-backups"
$Date = Get-Date -Format "yyyyMMdd_HHmmss"
$BackupFile = "$BackupDir\backup_$Date.sql"

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå backup ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ
if (!(Test-Path $BackupDir)) {
    New-Item -ItemType Directory -Path $BackupDir -Force
}

Write-Host "üîÑ ‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• database ‡∏Å‡πà‡∏≠‡∏ô migration..." -ForegroundColor Yellow

try {
    # ‡∏≠‡πà‡∏≤‡∏ô DATABASE_URL ‡∏à‡∏≤‡∏Å .env
    $envContent = Get-Content ".env" | Where-Object { $_ -match "^DATABASE_URL=" }
    $databaseUrl = $envContent -replace "^DATABASE_URL=", ""
    
    # ‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    Write-Host "üìã ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•..." -ForegroundColor Blue
    & pg_dump $databaseUrl | Out-File -FilePath $BackupFile -Encoding UTF8
    
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ ‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß: $BackupFile" -ForegroundColor Green
        
        # ‡∏£‡∏±‡∏ô migration
        Write-Host "üöÄ ‡∏£‡∏±‡∏ô Prisma migration..." -ForegroundColor Blue
        & npx prisma migrate deploy
        
        if ($LASTEXITCODE -eq 0) {
            Write-Host "‚úÖ Migration ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!" -ForegroundColor Green
            
            # Generate Prisma client
            Write-Host "üîÑ Generate Prisma client..." -ForegroundColor Blue
            & npx prisma generate
            
            Write-Host "üéâ ‡∏ó‡∏∏‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!" -ForegroundColor Green
        } else {
            Write-Host "‚ùå Migration ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß! ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏π‡πâ‡∏Ñ‡∏∑‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•..." -ForegroundColor Red
            & psql $databaseUrl -f $BackupFile
            Write-Host "üîÑ ‡∏Å‡∏π‡πâ‡∏Ñ‡∏∑‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß" -ForegroundColor Yellow
        }
    } else {
        Write-Host "‚ùå ‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß! ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å migration" -ForegroundColor Red
    }
} catch {
    Write-Host "‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: $_" -ForegroundColor Red
}

# ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏•‡πå backup
Write-Host "`nüìÅ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏•‡πå Backup:" -ForegroundColor Cyan
Get-ChildItem $BackupDir | Sort-Object LastWriteTime -Descending | Select-Object Name, LastWriteTime, @{Name="Size";Expression={[math]::Round($_.Length/1MB,2)}} | Format-Table