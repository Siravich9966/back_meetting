# Quick Backup Script for Windows
# ‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ: .\backup-db.ps1

Write-Host "üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á Backup Database..." -ForegroundColor Yellow

try {
    # ‡∏≠‡πà‡∏≤‡∏ô DATABASE_URL ‡∏à‡∏≤‡∏Å .env
    $envPath = ".\.env"
    if (Test-Path $envPath) {
        $databaseUrl = (Get-Content $envPath | Where-Object { $_ -match "^DATABASE_URL=" }) -replace "^DATABASE_URL=", ""
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå backup
        $backupName = "backup_" + (Get-Date -Format "yyyyMMdd_HHmmss") + ".sql"
        
        Write-Host "üìÅ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå: $backupName" -ForegroundColor Blue
        
        # ‡∏£‡∏±‡∏ô pg_dump
        & pg_dump $databaseUrl | Out-File -FilePath $backupName -Encoding UTF8
        
        if ($LASTEXITCODE -eq 0) {
            $fileSize = [math]::Round((Get-Item $backupName).Length / 1MB, 2)
            Write-Host "‚úÖ Backup ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡πÑ‡∏ü‡∏•‡πå: $backupName ($fileSize MB)" -ForegroundColor Green
        } else {
            Write-Host "‚ùå Backup ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß!" -ForegroundColor Red
        }
    } else {
        Write-Host "‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå .env" -ForegroundColor Red
    }
} catch {
    Write-Host "‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: $_" -ForegroundColor Red
}

Write-Host "`nüí° ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:" -ForegroundColor Cyan
Write-Host "- ‡∏Å‡∏π‡πâ‡∏Ñ‡∏∑‡∏ô‡∏î‡πâ‡∏ß‡∏¢: psql `$env:DATABASE_URL -f backup_xxxxxx.sql" -ForegroundColor White
Write-Host "- ‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏Å‡πà‡∏≤: Remove-Item backup_*.sql" -ForegroundColor White