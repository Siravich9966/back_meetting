// ‡∏ó‡∏î‡∏™‡∏≠‡∏ö login ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π JWT payload
import jwt from 'jsonwebtoken'

console.log('üîç ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏≠‡∏≤ JWT Token ‡∏à‡∏≤‡∏Å‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡∏°‡∏≤‡∏ó‡∏î‡∏™‡∏≠‡∏ö:')
console.log('1. ‡πÄ‡∏õ‡∏¥‡∏î Browser Developer Tools (F12)')
console.log('2. ‡πÑ‡∏õ Application/Storage > Local Storage')
console.log('3. ‡∏´‡∏≤ key "token" ‡∏´‡∏£‡∏∑‡∏≠ "accessToken"')
console.log('4. Copy JWT token ‡∏°‡∏≤‡πÉ‡∏™‡πà‡πÉ‡∏ô‡πÇ‡∏Ñ‡πâ‡∏î‡∏Ç‡πâ‡∏≤‡∏á‡∏•‡πà‡∏≤‡∏á')
console.log('5. ‡∏´‡∏£‡∏∑‡∏≠‡∏î‡∏π Network tab ‡πÄ‡∏°‡∏∑‡πà‡∏≠ login')
console.log('')

// ‡∏ß‡∏≤‡∏á‡∏à JWT token ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å browser ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ
const testToken = "YOUR_JWT_TOKEN_HERE"

if (testToken !== "YOUR_JWT_TOKEN_HERE") {
  try {
    const decoded = jwt.decode(testToken)
    console.log('üìã JWT Payload:', JSON.stringify(decoded, null, 2))
    
    if (decoded.role === 'officer') {
      console.log('üîç Officer data in JWT:')
      console.log(`- User ID: ${decoded.userId}`)
      console.log(`- Role: ${decoded.role}`) 
      console.log(`- Has position_department: ${decoded.position_department ? 'YES' : 'NO'}`)
      if (decoded.position_department) {
        console.log(`- Position Department: ${decoded.position_department}`)
      }
    }
  } catch (error) {
    console.error('‚ùå Error decoding JWT:', error.message)
  }
} else {
  console.log('‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà JWT token ‡∏à‡∏£‡∏¥‡∏á‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß‡∏£‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà')
}

process.exit(0)