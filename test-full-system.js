// ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î - Authentication + Protected APIs
async function testFullSystem() {
  const baseUrl = 'http://localhost:8000'
  
  console.log('üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏≠‡∏á‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î\n')
  console.log('=' .repeat(60))
  
  try {
    // 1. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Basic APIs
    console.log('\n1Ô∏è‚É£ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Basic APIs...')
    
    const healthResponse = await fetch(`${baseUrl}/health`)
    const healthResult = await healthResponse.json()
    console.log('‚úÖ Health Check:', healthResult.status)
    
    const testResponse = await fetch(`${baseUrl}/api/test`)
    const testResult = await testResponse.json()
    console.log('‚úÖ API Test:', testResult.message)
    
    // 2. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Register
    console.log('\n2Ô∏è‚É£ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Registration...')
    const registerData = {
      email: `test-${Date.now()}@mru.ac.th`,
      password: '123456',
      first_name: '‡∏ó‡∏î‡∏™‡∏≠‡∏ö',
      last_name: '‡∏£‡∏∞‡∏ö‡∏ö',
      citizen_id: `1${Date.now().toString().slice(-12)}`,
      position: '‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤',
      department: '‡∏Ñ‡∏ì‡∏∞‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå',
      zip_code: '44000'
    }
    
    const registerResponse = await fetch(`${baseUrl}/api/auth/register`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(registerData)
    })
    
    const registerResult = await registerResponse.json()
    if (registerResult.success) {
      console.log('‚úÖ Registration ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', registerResult.user.email)
    } else {
      console.log('‚ùå Registration ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', registerResult.error)
      return
    }
    
    // 3. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Login
    console.log('\n3Ô∏è‚É£ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Login...')
    const loginData = {
      email: registerData.email,
      password: '123456'
    }
    
    const loginResponse = await fetch(`${baseUrl}/api/auth/login`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(loginData)
    })
    
    const loginResult = await loginResponse.json()
    if (!loginResult.success) {
      console.log('‚ùå Login ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', loginResult.error)
      return
    }
    
    console.log('‚úÖ Login ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à')
    console.log('üìù User:', loginResult.user.first_name, loginResult.user.last_name)
    console.log('üé≠ Role:', loginResult.user.roles?.role_name)
    const token = loginResult.token
    console.log('üéüÔ∏è Token:', token.substring(0, 30) + '...')
    
    // 4. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Protected APIs
    console.log('\n4Ô∏è‚É£ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Protected APIs...')
    
    // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÑ‡∏°‡πà‡∏°‡∏µ token
    const noTokenResponse = await fetch(`${baseUrl}/api/protected/profile`)
    const noTokenResult = await noTokenResponse.json()
    console.log('‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ Token:', noTokenResult.error)
    
    // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏°‡∏µ token
    const profileResponse = await fetch(`${baseUrl}/api/protected/profile`, {
      headers: { 'Authorization': `Bearer ${token}` }
    })
    const profileResult = await profileResponse.json()
    if (profileResult.success) {
      console.log('‚úÖ Profile API:', profileResult.profile.email)
    } else {
      console.log('‚ùå Profile API:', profileResult.error)
    }
    
    // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö User Area
    const userAreaResponse = await fetch(`${baseUrl}/api/protected/user-area`, {
      headers: { 'Authorization': `Bearer ${token}` }
    })
    const userAreaResult = await userAreaResponse.json()
    if (userAreaResult.success) {
      console.log('‚úÖ User Area:', userAreaResult.message)
    } else {
      console.log('‚ùå User Area:', userAreaResult.error)
    }
    
    // 5. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Role-based Access
    console.log('\n5Ô∏è‚É£ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Role-based Access...')
    
    // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Officer Area (‡∏Ñ‡∏ß‡∏£‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÄ‡∏õ‡πá‡∏ô user)
    const officerAreaResponse = await fetch(`${baseUrl}/api/protected/officer-area`, {
      headers: { 'Authorization': `Bearer ${token}` }
    })
    const officerAreaResult = await officerAreaResponse.json()
    if (officerAreaResponse.status === 403) {
      console.log('‚úÖ Officer Area Restriction ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á')
    } else {
      console.log('‚ùå Officer Area:', officerAreaResult)
    }
    
    // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Admin Area (‡∏Ñ‡∏ß‡∏£‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÄ‡∏õ‡πá‡∏ô user)
    const adminAreaResponse = await fetch(`${baseUrl}/api/protected/admin-area`, {
      headers: { 'Authorization': `Bearer ${token}` }
    })
    const adminAreaResult = await adminAreaResponse.json()
    if (adminAreaResponse.status === 403) {
      console.log('‚úÖ Admin Area Restriction ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á')
    } else {
      console.log('‚ùå Admin Area:', adminAreaResult)
    }
    
    // 6. ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö
    console.log('\n' + '=' .repeat(60))
    console.log('üéâ ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö:')
    console.log('‚úÖ Server ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ')
    console.log('‚úÖ Database ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÑ‡∏î‡πâ')
    console.log('‚úÖ Registration/Login ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ')
    console.log('‚úÖ JWT Middleware ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ')
    console.log('‚úÖ Role-based Access Control ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ')
    console.log('‚úÖ Protected APIs ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ')
    console.log('\nüöÄ ‡∏£‡∏∞‡∏ö‡∏ö‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏ï‡πà‡∏≠!')
    
  } catch (error) {
    console.error('\n‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö:', error.message)
    console.error('üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ server ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà')
  }
}

// ‡∏£‡∏≠‡πÉ‡∏´‡πâ server ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏≠‡∏¢‡∏ó‡∏î‡∏™‡∏≠‡∏ö
setTimeout(testFullSystem, 2000)
