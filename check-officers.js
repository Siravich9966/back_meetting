import prisma from './lib/prisma.js'

async function checkOfficers() {
  try {
    console.log('üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Officer accounts:')
    
    const officers = await prisma.officer.findMany({
      select: {
        officer_id: true,
        email: true,
        position: true,
        department: true,
        first_name: true,
        last_name: true
      }
    })

    officers.forEach((officer, index) => {
      console.log(`\nüìã Officer ${index + 1}:`)
      console.log(`ID: ${officer.officer_id}`)
      console.log(`Name: ${officer.first_name} ${officer.last_name}`)
      console.log(`Email: ${officer.email}`)
      console.log(`Position: ${officer.position}`)
      console.log(`Department: ${officer.department}`)
      
      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Ñ‡∏ß‡∏£‡∏î‡∏π‡πÅ‡∏•‡∏´‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏ì‡∏∞‡πÑ‡∏´‡∏ô
      if (officer.position && officer.position.includes('‡∏î‡∏π‡πÅ‡∏•‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°')) {
        const match = officer.position.match(/‡∏Ñ‡∏ì‡∏∞([‡∏Å-‡∏Æ‡∏∞-‡∏µ]+)/);
        if (match) {
          console.log(`üéØ Should manage rooms for: ‡∏Ñ‡∏ì‡∏∞${match[1]}`)
        }
      }
    })
    
    console.log(`\nüìä Total officers: ${officers.length}`)
    
  } catch (error) {
    console.error('‚ùå Error:', error)
  } finally {
    await prisma.$disconnect()
    process.exit(0)
  }
}

checkOfficers()