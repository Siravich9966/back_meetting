// üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• capacity ‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á meeting_room
import { PrismaClient } from './generated/prisma/index.js'
const prisma = new PrismaClient()

async function checkRoomsCapacity() {
  try {
    console.log('üè¢ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• meeting_room...')
    
    const rooms = await prisma.meeting_room.findMany({
      select: {
        room_id: true,
        room_name: true,
        capacity: true,
        location_m: true,
        department: true,
        status_m: true
      }
    })
    
    console.log(`üìä ‡∏û‡∏ö‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${rooms.length} ‡∏´‡πâ‡∏≠‡∏á`)
    console.log('')
    
    rooms.forEach((room, index) => {
      console.log(`${index + 1}. ${room.room_name}`)
      console.log(`   - ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏∏: ${room.capacity || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'} ‡∏Ñ‡∏ô`)
      console.log(`   - ‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà: ${room.location_m}`)
      console.log(`   - ‡πÅ‡∏ú‡∏ô‡∏Å: ${room.department}`)
      console.log(`   - ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ${room.status_m}`)
      console.log('')
    })
    
    // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏´‡πâ‡∏≠‡∏á‡πÑ‡∏´‡∏ô‡∏ó‡∏µ‡πà capacity ‡πÄ‡∏õ‡πá‡∏ô null ‡∏´‡∏£‡∏∑‡∏≠ undefined
    const roomsWithoutCapacity = rooms.filter(room => !room.capacity)
    if (roomsWithoutCapacity.length > 0) {
      console.log('‚ö†Ô∏è ‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ capacity:')
      roomsWithoutCapacity.forEach(room => {
        console.log(`   - ${room.room_name} (ID: ${room.room_id})`)
      })
    } else {
      console.log('‚úÖ ‡∏ó‡∏∏‡∏Å‡∏´‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• capacity ‡πÅ‡∏•‡πâ‡∏ß')
    }
    
  } catch (error) {
    console.error('‚ùå Error:', error)
  } finally {
    await prisma.$disconnect()
  }
}

checkRoomsCapacity()