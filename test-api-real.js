// ‡∏ó‡∏î‡∏™‡∏≠‡∏ö API ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏à‡∏£‡∏¥‡∏á‡∏ú‡πà‡∏≤‡∏ô HTTP
import fetch from 'node-fetch'

const BASE_URL = 'http://localhost:8000'

// ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• login
const testUser = {
  email: 'sirawit@test.com',
  password: 'password123'
}

async function testRealBookingAPI() {
  try {
    console.log('üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö API ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏à‡∏£‡∏¥‡∏á')
    console.log('=' * 50)

    // 1. Login ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏≠‡∏≤ token
    console.log('\n1. ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö...')
    const loginResponse = await fetch(`${BASE_URL}/auth/login`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(testUser)
    })

    if (!loginResponse.ok) {
      console.log('‚ùå Login ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à')
      return
    }

    const loginData = await loginResponse.json()
    const token = loginData.token
    console.log('‚úÖ Login ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à')

    // 2. ‡∏î‡∏π‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà
    console.log('\n2. ‡∏î‡∏π‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà 17 ‡∏™‡∏¥‡∏á‡∏´‡∏≤‡∏Ñ‡∏°...')
    const calendarResponse = await fetch(`${BASE_URL}/reservations/calendar/7?detailed=true`, {
      headers: {
        'Authorization': `Bearer ${token}`
      }
    })

    if (calendarResponse.ok) {
      const calendarData = await calendarResponse.json()
      const Aug17Data = calendarData.data.availability?.['2025-08-17']
      
      if (Aug17Data) {
        console.log(`üìä ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà 17 ‡∏™‡∏¥‡∏á‡∏´‡∏≤‡∏Ñ‡∏° ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á ${Aug17Data.total_reservations} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á`)
        const bookedSlots = Aug17Data.slots.filter(slot => !slot.available)
        console.log(`‚ùå ‡∏ä‡πà‡∏ß‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß: ${bookedSlots.length} ‡∏ä‡πà‡∏ß‡∏á`)
        bookedSlots.forEach(slot => {
          console.log(`   ${slot.time} - ${slot.reservations.length} ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á`)
        })
      }
    }

    // 3. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ã‡πâ‡∏≥
    console.log('\n3. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß (08:00-09:00)...')
    
    const conflictBooking = {
      room_id: 7,
      start_at: '2025-08-17',
      end_at: '2025-08-17',
      start_time: '2025-08-17T08:00:00.000Z',
      end_time: '2025-08-17T09:00:00.000Z',
      details_r: '‡∏ó‡∏î‡∏™‡∏≠‡∏ö conflict detection'
    }

    const bookingResponse = await fetch(`${BASE_URL}/reservations`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${token}`
      },
      body: JSON.stringify(conflictBooking)
    })

    const bookingData = await bookingResponse.json()
    
    if (bookingResponse.status === 409) {
      console.log('‚úÖ Conflict detection ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á!')
      console.log(`üìù ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°: ${bookingData.message}`)
      if (bookingData.conflicts) {
        console.log(`‚ö†Ô∏è  ‡∏û‡∏ö conflict ${bookingData.conflicts.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£:`)
        bookingData.conflicts.forEach((conflict, i) => {
          console.log(`   ${i+1}. ID: ${conflict.reservation_id}, ‡πÄ‡∏ß‡∏•‡∏≤: ${new Date(conflict.start_time).toTimeString().slice(0,5)}-${new Date(conflict.end_time).toTimeString().slice(0,5)}`)
        })
      }
    } else if (bookingResponse.ok) {
      console.log('‚ùå Conflict detection ‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô! ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏°‡πâ‡∏à‡∏∞‡∏°‡∏µ conflict')
      console.log(`üìù ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà ID: ${bookingData.data?.reservation_id}`)
    } else {
      console.log(`‚ùå API Error: ${bookingResponse.status}`)
      console.log(`üìù ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°: ${bookingData.message}`)
    }

    // 4. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏ó‡∏µ‡πà‡∏ß‡πà‡∏≤‡∏á
    console.log('\n4. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏ó‡∏µ‡πà‡∏ß‡πà‡∏≤‡∏á (14:00-15:00)...')
    
    const validBooking = {
      room_id: 7,
      start_at: '2025-08-17',
      end_at: '2025-08-17',
      start_time: '2025-08-17T14:00:00.000Z',
      end_time: '2025-08-17T15:00:00.000Z',
      details_r: '‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏õ‡∏Å‡∏ï‡∏¥'
    }

    const validResponse = await fetch(`${BASE_URL}/reservations`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${token}`
      },
      body: JSON.stringify(validBooking)
    })

    const validData = await validResponse.json()
    
    if (validResponse.ok) {
      console.log('‚úÖ ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏ó‡∏µ‡πà‡∏ß‡πà‡∏≤‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!')
      console.log(`üìù ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà ID: ${validData.data?.reservation_id}`)
    } else {
      console.log(`‚ùå ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${validResponse.status}`)
      console.log(`üìù ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°: ${validData.message}`)
    }

  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error.message)
  }
}

// ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
testRealBookingAPI()
